name: Create Pull Request
on:
  issue_comment:
    types: [created]

jobs:
  createPullRequest:
    if: |
      github.event_name == 'issue_comment' &&
      (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER') &&
      startsWith(github.event.comment.body, '/create release')
    runs-on: ubuntu-latest
    steps:
        # Checkout Project
      - name: 📚 Checkout
        uses: actions/checkout@v2

        # Setup NodeJS
      - name: 🟢 Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12

        # Install Dependencies
      - name: ⏳ Install
        run: yarn install

        # Configure Git User so that it can perform Git Actions like commits
      - name: 👷 Configure Git User
        run: |
          git config --global user.name 'bennodev19'
          git config --global user.email 'bennodev19@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Create new Version
      - name: 🗽 New Version
        run: yarn run versionup --yes

        # Adds the above created version to the output so that we can get it later in the pull request with 'steps.changelog.outputs.version'
      - name: 🖋 Set new Version to Output
        id: changelog
        shell: bash -ex {0}
        run: |
          version=$(node -p 'require("./lerna.json").version')
          echo "::set-output name=version::${version}"

        # Create the Pull Request
      - name: 📤 Create Pull Request
        id: create-pull-request
        uses: peter-evans/create-pull-request@v3  # https://github.com/peter-evans/create-pull-request
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ secrets.GITHUB_PATH }}
          commit-message: "Update v${{ steps.changelog.outputs.version }}"
          committer: GitHub <noreply@github.com>
          author: "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
          title: 'v${{ steps.changelog.outputs.version }}'
          body: |
            ## v${{ steps.changelog.outputs.version }}

            ### Breaking Changes

            - [ ] TODO

            ### Features

            - [ ] TODO

            ### Bug Fixes

            - [ ] TODO
          labels: "release"
          branch: "release/${{ steps.changelog.outputs.version }}"
          base: "develop"

        # Print some important Notes
      - name: 🏁 Result
        run: |
          echo "✔️ Finished"
          echo "✔️ Pull Request Number - ${{ steps.create-pull-request.outputs.pr_number }}"
          echo "✔️ Pull Request URL - ${{ steps.create-pull-request.outputs.pull-request-url }}"
          echo "✔️ Version - ${{ steps.changelog.outputs.version }}"
